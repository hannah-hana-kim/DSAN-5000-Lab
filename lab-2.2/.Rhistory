library('dplyr')
library('tibble')
library('stringr')
## RUN THE FOLLOWING CODE, THIS USES A CONDITIONAL TO ONLY KEEP ROWS WHERE "age_years"=NaN
df[df == "NaN"] <- NA
df <- df[!is.na(df$age_years), ]
## INSERT CODE TO REPLACE ANY NEGATIVE "age_years" WITH NUMPY "NaN" OBJECT
## There are multiple ways to do this, for example you can iterate over the
# rows and use apply with a lambda function to enforce the conditional
# double check the data type
# class(df$age_years)
df$age_years <- replace(df$age_years, which(df$age_years < 0), NA)
## RUN THE FOLLOWING CELL TO REMOVE ANY WHITE SPACE FROM "yearly_income_usd"
df$yearly_income_usd <- trimws(df$yearly_income_usd)
df <- df %>%
mutate(yearly_income_usd = ifelse(is.na(as.numeric(yearly_income_usd)), NA, yearly_income_usd))
df$yearly_income_usd <- as.numeric(df$yearly_income_usd)
df$yearly_income_usd[is.na(df$yearly_income_usd)] <- NA
# PRINT THE DATA FRAME
df
# INSERT CODE TO THROW AWAY ANY ROW WITH "NaN"
# JUST PRINT THE OUTPUT, DONT RE-DEFINE THE DATAFRAME
df <- df[complete.cases(df), ]
print(df)
for (i in 1:ncol(df)) {
df[,i] <- as.numeric(df[,i])
}
columns_numeric <- c("customer_id", "age_years", "account_balance_usd", "yearly_income_usd", "housing_payment_usd")
for (col_name in columns_numeric {
columns_numeric <- c("customer_id", "age_years", "account_balance_usd", "yearly_income_usd", "housing_payment_usd")
for (col_name in columns_numeric) {
df[col_name] <- as.numeric(df[col_name])
}
for (i in 1:ncols(df)) {
df[,i] <- as.numeric(df[,i])
}
for (i in 1:ncol(df)) {
df[,i] <- as.numeric(df[,i])
}
class(df["customer_id"])
class(df["customer_id", 1])
for (i in 1:ncol(df)) {
df[,i] <- as.double(df[,i])
}
class(df["customer_id", 1])
library('tidyverse')
library('dplyr')
library('tibble')
library('stringr')
# INSERT CODE TO READ THE DATA FILES
df1 <- read.csv("./data/example-1.csv", header=TRUE)
df2 <- read.csv("./data/example-2.csv", header=TRUE)
# LOOK AT FIRST COUPLE LINES
head(df1, 2)
head(df2, 2)
# LOOK AT LAST COUPLE LINES
tail(df1, 2)
tail(df2, 2)
colnames(df1)
colnames(df2)
## INSERT CODE TO REMOVE SPACES FROM COLUMN NAMES
print("NOT REQUIRED R REMOVES SPACES UPON READING")
colnames(df1) <- make.names(colnames(df1), unique = TRUE)
colnames(df2) <- make.names(colnames(df2), unique = TRUE)
# INSERT CODE TO RENAME THE COLUMN NAME "age" --> "age_years" and "country" as "country_of_origin"
# PRINT THE MODIFIED COLUMN NAMES WHEN DONE
colnames(df1)[which(names(df1) == "age")] <- "age_years"
colnames(df2)[which(names(df2) == "country")] <- "country_of_origin"
colnames(df1)
colnames(df2)
#INSERT CODE TO CONVERT TYPECAST "housing_payment_pesos" AS TYPE "FLOAT"
df2$housing_payment_pesos <- as.double(df2$housing_payment_pesos)
# double-check the data type
str(df2$housing_payment_pesos)
#INSERT CODE TO CONVERT "housing_payment_pesos" to USD
# 1 Mexican Peso = 0.050 USD
# 1 USD = 19.88 Mexican Peso
df2$housing_payment_pesos <- df2$housing_payment_pesos * 0.05
#INSERT CODE TO RENAME "housing_payment_pesos" to "housing_payment_usd"
colnames(df2)[which(names(df2) == "housing_payment_pesos")] <- "housing_payment_usd"
# INSERT CODE TO MAKE SURE ALL "US" TAGS equal "usa" and all "MEX" tags equal "mex"
df2$country_of_origin[df2$country_of_origin == "US"] <- "usa"
df2$country_of_origin[df2$country_of_origin == "MEX"] <- "mex"
df2$country_of_origin <- tolower(df2$country_of_origin)
df1
df2
library(dplyr)
# INSERT CODE TO DO AN "OUTER" JOIN FOR THE TWO DATA-FRAMES USING "CUSTOMER_ID" AS COMMON KEY
df <- df1 %>% full_join(df2)
df
# INSERT CODE TO: REPLACE ALL CELLS THAT ARE ENTIRELY SPACE (OR EMPTY) WITH NAN
print("NOT NEEDED, R ALREADY DOES UPON READING")
df <- replace(df, df==' ', NA) # space
df <- replace(df, df=='', NA) # empty
# df <- na_if(df, '')
# INSERT CODE TO PRINT THE SHAPE OF THE NEW DATAFRAME
dim(df)
# INSERT CODE TO COUNT THE NUMBER OF MISSING VALUES IN EACH COLUMN (use google)
# sum(is.na(df$customer_id))
# sum(is.na(df$initials))
# sum(is.na(df$age_years))
# sum(is.na(df$account_balance_usd))
# sum(is.na(df$yearly_income_usd))
# sum(is.na(df$num_children))
# sum(is.na(df$is_house_owner))
# sum(is.na(df$housing_payment_usd))
# sum(is.na(df$country_of_origin))
missing_counts <- integer(ncol(df))
for (i in 1:ncol(df)) {
missing_counts[i] <- sum(is.na(df[, i]))
}
missing_counts
### INSERT CODE TO REMOVE THE COLUMNS "initials" AND "num_children",
within(df, rm("initials", "num_children"))
# INSERT CODE TO PRINT THE NEW DATA-FRAME AND ITS SHAPE
df
dim(df)
## INSERT CODE TO REPLACE THE STRING "nan" WITH NAN, PRINT THE NEW DATA-FRAME WHEN DONE
print("NOT NEEDED, R CONVERTED TO NA")
df <- replace(df, df=='NaN', NA)
print(df)
## RUN THE FOLLOWING CODE, THIS USES A CONDITIONAL TO ONLY KEEP ROWS WHERE "age_years"=NaN
df[df == "NaN"] <- NA
df <- df[!is.na(df$age_years), ]
## INSERT CODE TO REPLACE ANY NEGATIVE "age_years" WITH NUMPY "NaN" OBJECT
## There are multiple ways to do this, for example you can iterate over the
# rows and use apply with a lambda function to enforce the conditional
# double check the data type
# class(df$age_years)
df$age_years <- replace(df$age_years, which(df$age_years < 0), NA)
## RUN THE FOLLOWING CELL TO REMOVE ANY WHITE SPACE FROM "yearly_income_usd"
df$yearly_income_usd <- trimws(df$yearly_income_usd)
## INSERT CODE TO REPLACE ANY "yearly_income_usd" THAT IS A STRING WITH NUMPY nan OBJECT
# df <- df %>%
# mutate(yearly_income_usd = ifelse(is.na(as.numeric(yearly_income_usd)), NA, yearly_income_usd))
df$yearly_income_usd <- as.numeric(df$yearly_income_usd)
df$yearly_income_usd[is.na(df$yearly_income_usd)] <- NA
# PRINT THE DATA FRAME
df
# INSERT CODE TO THROW AWAY ANY ROW WITH "NaN"
# JUST PRINT THE OUTPUT, DONT RE-DEFINE THE DATAFRAME
df <- df[complete.cases(df), ]
print(df)
# INSERT CODE TO THROW AWAY ANY ROW WITH "NaN"
# JUST PRINT THE OUTPUT, DONT RE-DEFINE THE DATAFRAME
df <- df[complete.cases(df), ]
print(df)
df
library('tidyverse')
library('dplyr')
library('tibble')
library('stringr')
library('caret')
install.packages('caret')
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
install.packages("caret")
library('tidyverse')
knitr::opts_chunk$set(echo = TRUE)
library('tidyverse')
library('dplyr')
library('tibble')
library('stringr')
library('caret')
# INSERT CODE TO READ THE DATA FILES
df1 <- read.csv("./data/example-1.csv", header=TRUE)
df2 <- read.csv("./data/example-2.csv", header=TRUE)
# LOOK AT FIRST COUPLE LINES
head(df1, 2)
head(df2, 2)
# LOOK AT LAST COUPLE LINES
tail(df1, 2)
tail(df2, 2)
colnames(df1)
colnames(df2)
## INSERT CODE TO REMOVE SPACES FROM COLUMN NAMES
print("NOT REQUIRED R REMOVES SPACES UPON READING")
# INSERT CODE TO RENAME THE COLUMN NAME "age" --> "age_years" and "country" as "country_of_origin"
# PRINT THE MODIFIED COLUMN NAMES WHEN DONE
colnames(df1)[which(names(df1) == "age")] <- "age_years"
colnames(df2)[which(names(df2) == "country")] <- "country_of_origin"
colnames(df1)
colnames(df2)
#INSERT CODE TO CONVERT TYPECAST "housing_payment_pesos" AS TYPE "FLOAT"
df2$housing_payment_pesos <- as.double(df2$housing_payment_pesos)
# double-check the data type
str(df2$housing_payment_pesos)
#INSERT CODE TO CONVERT "housing_payment_pesos" to USD
# 1 Mexican Peso = 0.050 USD
# 1 USD = 19.88 Mexican Peso
df2$housing_payment_pesos <- df2$housing_payment_pesos * 0.05
#INSERT CODE TO RENAME "housing_payment_pesos" to "housing_payment_usd"
colnames(df2)[which(names(df2) == "housing_payment_pesos")] <- "housing_payment_usd"
# INSERT CODE TO MAKE SURE ALL "US" TAGS equal "usa" and all "MEX" tags equal "mex"
df2$country_of_origin[df2$country_of_origin == "US"] <- "usa"
df2$country_of_origin[df2$country_of_origin == "MEX"] <- "mex"
df2$country_of_origin <- tolower(df2$country_of_origin)
df1
df2
#INSERT CODE TO CONVERT TYPECAST "housing_payment_pesos" AS TYPE "FLOAT"
df2$housing_payment_pesos <- as.double(df2$housing_payment_pesos)
# INSERT CODE TO READ THE DATA FILES
df1 <- read.csv("./data/example-1.csv", header=TRUE)
df2 <- read.csv("./data/example-2.csv", header=TRUE)
# LOOK AT FIRST COUPLE LINES
head(df1, 2)
head(df2, 2)
# LOOK AT LAST COUPLE LINES
tail(df1, 2)
tail(df2, 2)
colnames(df1)
colnames(df2)
## INSERT CODE TO REMOVE SPACES FROM COLUMN NAMES
print("NOT REQUIRED R REMOVES SPACES UPON READING")
# INSERT CODE TO RENAME THE COLUMN NAME "age" --> "age_years" and "country" as "country_of_origin"
# PRINT THE MODIFIED COLUMN NAMES WHEN DONE
colnames(df1)[which(names(df1) == "age")] <- "age_years"
colnames(df2)[which(names(df2) == "country")] <- "country_of_origin"
colnames(df1)
colnames(df2)
#INSERT CODE TO CONVERT TYPECAST "housing_payment_pesos" AS TYPE "FLOAT"
df2$housing_payment_pesos <- as.double(df2$housing_payment_pesos)
# double-check the data type
str(df2$housing_payment_pesos)
#INSERT CODE TO CONVERT "housing_payment_pesos" to USD
# 1 Mexican Peso = 0.050 USD
# 1 USD = 19.88 Mexican Peso
df2$housing_payment_pesos <- df2$housing_payment_pesos * 0.05
#INSERT CODE TO RENAME "housing_payment_pesos" to "housing_payment_usd"
colnames(df2)[which(names(df2) == "housing_payment_pesos")] <- "housing_payment_usd"
# INSERT CODE TO MAKE SURE ALL "US" TAGS equal "usa" and all "MEX" tags equal "mex"
df2$country_of_origin[df2$country_of_origin == "US"] <- "usa"
df2$country_of_origin[df2$country_of_origin == "us"] <- "usa"
df2$country_of_origin[df2$country_of_origin == "MEX"] <- "mex"
df2$country_of_origin <- tolower(df2$country_of_origin)
df1
df2
# INSERT CODE TO READ THE DATA FILES
df1 <- read.csv("./data/example-1.csv", header=TRUE)
df2 <- read.csv("./data/example-2.csv", header=TRUE)
# LOOK AT FIRST COUPLE LINES
head(df1, 2)
head(df2, 2)
# LOOK AT LAST COUPLE LINES
tail(df1, 2)
tail(df2, 2)
colnames(df1)
colnames(df2)
## INSERT CODE TO REMOVE SPACES FROM COLUMN NAMES
print("NOT REQUIRED R REMOVES SPACES UPON READING")
# INSERT CODE TO RENAME THE COLUMN NAME "age" --> "age_years" and "country" as "country_of_origin"
# PRINT THE MODIFIED COLUMN NAMES WHEN DONE
colnames(df1)[which(names(df1) == "age")] <- "age_years"
colnames(df2)[which(names(df2) == "country")] <- "country_of_origin"
colnames(df1)
colnames(df2)
df1
df2
#INSERT CODE TO CONVERT TYPECAST "housing_payment_pesos" AS TYPE "FLOAT"
df2$housing_payment_pesos <- as.double(df2$housing_payment_pesos)
# double-check the data type
str(df2$housing_payment_pesos)
#INSERT CODE TO CONVERT "housing_payment_pesos" to USD
# 1 Mexican Peso = 0.050 USD
# 1 USD = 19.88 Mexican Peso
df2$housing_payment_pesos <- df2$housing_payment_pesos * 0.05
#INSERT CODE TO RENAME "housing_payment_pesos" to "housing_payment_usd"
colnames(df2)[which(names(df2) == "housing_payment_pesos")] <- "housing_payment_usd"
# INSERT CODE TO MAKE SURE ALL "US" TAGS equal "usa" and all "MEX" tags equal "mex"
df2$country_of_origin[df2$country_of_origin == "US"] <- "usa"
df2$country_of_origin[df2$country_of_origin == "USA"] <- "usa"
df2$country_of_origin[df2$country_of_origin == "MEX"] <- "mex"
df2$country_of_origin <- tolower(df2$country_of_origin)
df1
df2
# INSERT CODE TO READ THE DATA FILES
df1 <- read.csv("./data/example-1.csv", header=TRUE)
df2 <- read.csv("./data/example-2.csv", header=TRUE)
# LOOK AT FIRST COUPLE LINES
head(df1, 2)
head(df2, 2)
# LOOK AT LAST COUPLE LINES
tail(df1, 2)
tail(df2, 2)
colnames(df1)
colnames(df2)
## INSERT CODE TO REMOVE SPACES FROM COLUMN NAMES
print("NOT REQUIRED R REMOVES SPACES UPON READING")
# INSERT CODE TO RENAME THE COLUMN NAME "age" --> "age_years" and "country" as "country_of_origin"
# PRINT THE MODIFIED COLUMN NAMES WHEN DONE
colnames(df1)[which(names(df1) == "age")] <- "age_years"
colnames(df2)[which(names(df2) == "country")] <- "country_of_origin"
colnames(df1)
colnames(df2)
df1
df2
#INSERT CODE TO CONVERT TYPECAST "housing_payment_pesos" AS TYPE "FLOAT"
df2$housing_payment_pesos <- as.double(df2$housing_payment_pesos)
# double-check the data type
str(df2$housing_payment_pesos)
#INSERT CODE TO CONVERT "housing_payment_pesos" to USD
# 1 Mexican Peso = 0.050 USD
# 1 USD = 19.88 Mexican Peso
df2$housing_payment_pesos <- df2$housing_payment_pesos * 0.05
#INSERT CODE TO RENAME "housing_payment_pesos" to "housing_payment_usd"
colnames(df2)[which(names(df2) == "housing_payment_pesos")] <- "housing_payment_usd"
# INSERT CODE TO MAKE SURE ALL "US" TAGS equal "usa" and all "MEX" tags equal "mex"
df2$country_of_origin[df2$country_of_origin == "US"] <- "usa"
df2$country_of_origin[df2$country_of_origin == "USA"] <- "usa"
df2$country_of_origin[df2$country_of_origin == "MEX"] <- "mex"
df1
df2
# INSERT CODE TO READ THE DATA FILES
df1 <- read.csv("./data/example-1.csv", header=TRUE)
df2 <- read.csv("./data/example-2.csv", header=TRUE)
# LOOK AT FIRST COUPLE LINES
head(df1, 2)
head(df2, 2)
# LOOK AT LAST COUPLE LINES
tail(df1, 2)
tail(df2, 2)
colnames(df1)
colnames(df2)
## INSERT CODE TO REMOVE SPACES FROM COLUMN NAMES
print("NOT REQUIRED R REMOVES SPACES UPON READING")
# INSERT CODE TO RENAME THE COLUMN NAME "age" --> "age_years" and "country" as "country_of_origin"
# PRINT THE MODIFIED COLUMN NAMES WHEN DONE
colnames(df1)[which(names(df1) == "age")] <- "age_years"
colnames(df2)[which(names(df2) == "country")] <- "country_of_origin"
colnames(df1)
colnames(df2)
df1
df2
#INSERT CODE TO CONVERT TYPECAST "housing_payment_pesos" AS TYPE "FLOAT"
df2$housing_payment_pesos <- as.double(df2$housing_payment_pesos)
# double-check the data type
str(df2$housing_payment_pesos)
#INSERT CODE TO CONVERT "housing_payment_pesos" to USD
# 1 Mexican Peso = 0.050 USD
# 1 USD = 19.88 Mexican Peso
df2$housing_payment_pesos <- df2$housing_payment_pesos * 0.05
#INSERT CODE TO RENAME "housing_payment_pesos" to "housing_payment_usd"
colnames(df2)[which(names(df2) == "housing_payment_pesos")] <- "housing_payment_usd"
# INSERT CODE TO MAKE SURE ALL "US" TAGS equal "usa" and all "MEX" tags equal "mex"
df2[df2 == "US"] <- 'usa'
df2[df2 == "USA"] <- 'usa'
df2[df2 == "MEX"] <- 'mex'
df1
df2
# INSERT CODE TO READ THE DATA FILES
df1 <- read.csv("./data/example-1.csv", header=TRUE)
df2 <- read.csv("./data/example-2.csv", header=TRUE)
# LOOK AT FIRST COUPLE LINES
head(df1, 2)
head(df2, 2)
# LOOK AT LAST COUPLE LINES
tail(df1, 2)
tail(df2, 2)
colnames(df1)
colnames(df2)
## INSERT CODE TO REMOVE SPACES FROM COLUMN NAMES
print("NOT REQUIRED R REMOVES SPACES UPON READING")
# INSERT CODE TO RENAME THE COLUMN NAME "age" --> "age_years" and "country" as "country_of_origin"
# PRINT THE MODIFIED COLUMN NAMES WHEN DONE
colnames(df1)[which(names(df1) == "age")] <- "age_years"
colnames(df2)[which(names(df2) == "country")] <- "country_of_origin"
colnames(df1)
colnames(df2)
df1
df2
#INSERT CODE TO CONVERT TYPECAST "housing_payment_pesos" AS TYPE "FLOAT"
df2$housing_payment_pesos <- as.double(df2$housing_payment_pesos)
# double-check the data type
str(df2$housing_payment_pesos)
#INSERT CODE TO CONVERT "housing_payment_pesos" to USD
# 1 Mexican Peso = 0.050 USD
# 1 USD = 19.88 Mexican Peso
df2$housing_payment_pesos <- df2$housing_payment_pesos * 0.05
#INSERT CODE TO RENAME "housing_payment_pesos" to "housing_payment_usd"
colnames(df2)[which(names(df2) == "housing_payment_pesos")] <- "housing_payment_usd"
# INSERT CODE TO MAKE SURE ALL "US" TAGS equal "usa" and all "MEX" tags equal "mex"
df2[df2$country_of_origin == "US"] <- 'usa'
df2[df2$country_of_origin == "USA"] <- 'usa'
df2[df2$country_of_origin == "MEX"] <- 'mex'
df1
df2
# INSERT CODE TO READ THE DATA FILES
df1 <- read.csv("./data/example-1.csv", header=TRUE)
df2 <- read.csv("./data/example-2.csv", header=TRUE)
# LOOK AT FIRST COUPLE LINES
head(df1, 2)
head(df2, 2)
# LOOK AT LAST COUPLE LINES
tail(df1, 2)
tail(df2, 2)
colnames(df1)
colnames(df2)
## INSERT CODE TO REMOVE SPACES FROM COLUMN NAMES
print("NOT REQUIRED R REMOVES SPACES UPON READING")
# INSERT CODE TO RENAME THE COLUMN NAME "age" --> "age_years" and "country" as "country_of_origin"
# PRINT THE MODIFIED COLUMN NAMES WHEN DONE
colnames(df1)[which(names(df1) == "age")] <- "age_years"
colnames(df2)[which(names(df2) == "country")] <- "country_of_origin"
colnames(df1)
colnames(df2)
df1
df2
#INSERT CODE TO CONVERT TYPECAST "housing_payment_pesos" AS TYPE "FLOAT"
df2$housing_payment_pesos <- as.double(df2$housing_payment_pesos)
# double-check the data type
str(df2$housing_payment_pesos)
#INSERT CODE TO CONVERT "housing_payment_pesos" to USD
# 1 Mexican Peso = 0.050 USD
# 1 USD = 19.88 Mexican Peso
df2$housing_payment_pesos <- df2$housing_payment_pesos * 0.05
#INSERT CODE TO RENAME "housing_payment_pesos" to "housing_payment_usd"
colnames(df2)[which(names(df2) == "housing_payment_pesos")] <- "housing_payment_usd"
# INSERT CODE TO MAKE SURE ALL "US" TAGS equal "usa" and all "MEX" tags equal "mex"
df2$country_of_origin[df2$country_of_origin == "US"] <- 'usa'
df2$country_of_origin[df2$country_of_origin == "USA"] <- 'usa'
df2$country_of_origin[df2$country_of_origin == "MEX"] <- 'mex'
df1
df2
library('tidyverse')
library('dplyr')
library('tibble')
library('stringr')
library('caret')
# INSERT CODE TO READ THE DATA FILES
df1 <- read.csv("./data/example-1.csv", header=TRUE)
df2 <- read.csv("./data/example-2.csv", header=TRUE)
# LOOK AT FIRST COUPLE LINES
head(df1, 2)
head(df2, 2)
# LOOK AT LAST COUPLE LINES
tail(df1, 2)
tail(df2, 2)
colnames(df1)
colnames(df2)
## INSERT CODE TO REMOVE SPACES FROM COLUMN NAMES
print("NOT REQUIRED R REMOVES SPACES UPON READING")
# INSERT CODE TO RENAME THE COLUMN NAME "age" --> "age_years" and "country" as "country_of_origin"
# PRINT THE MODIFIED COLUMN NAMES WHEN DONE
colnames(df1)[which(names(df1) == "age")] <- "age_years"
colnames(df2)[which(names(df2) == "country")] <- "country_of_origin"
colnames(df1)
colnames(df2)
df1
df2
#INSERT CODE TO CONVERT TYPECAST "housing_payment_pesos" AS TYPE "FLOAT"
df2$housing_payment_pesos <- as.double(df2$housing_payment_pesos)
# double-check the data type
str(df2$housing_payment_pesos)
#INSERT CODE TO CONVERT "housing_payment_pesos" to USD
# 1 Mexican Peso = 0.050 USD
# 1 USD = 19.88 Mexican Peso
df2$housing_payment_pesos <- df2$housing_payment_pesos * 0.05
#INSERT CODE TO RENAME "housing_payment_pesos" to "housing_payment_usd"
colnames(df2)[which(names(df2) == "housing_payment_pesos")] <- "housing_payment_usd"
# INSERT CODE TO MAKE SURE ALL "US" TAGS equal "usa" and all "MEX" tags equal "mex"
df2$country_of_origin[df2$country_of_origin == "US"] <- 'usa'
df2$country_of_origin[df2$country_of_origin == "USA"] <- 'usa'
df2$country_of_origin[df2$country_of_origin == "MEX"] <- 'mex'
df1
df2
# INSERT CODE TO READ THE DATA FILES
df1 <- read.csv("./data/example-1.csv", header=TRUE)
df2 <- read.csv("./data/example-2.csv", header=TRUE)
# LOOK AT FIRST COUPLE LINES
head(df1, 2)
head(df2, 2)
# LOOK AT LAST COUPLE LINES
tail(df1, 2)
tail(df2, 2)
colnames(df1)
colnames(df2)
## INSERT CODE TO REMOVE SPACES FROM COLUMN NAMES
print("NOT REQUIRED R REMOVES SPACES UPON READING")
# INSERT CODE TO RENAME THE COLUMN NAME "age" --> "age_years" and "country" as "country_of_origin"
# PRINT THE MODIFIED COLUMN NAMES WHEN DONE
colnames(df1)[which(names(df1) == "age")] <- "age_years"
colnames(df2)[which(names(df2) == "country")] <- "country_of_origin"
colnames(df1)
colnames(df2)
df1
df2
#INSERT CODE TO CONVERT TYPECAST "housing_payment_pesos" AS TYPE "FLOAT"
df2$housing_payment_pesos <- as.double(df2$housing_payment_pesos)
# double-check the data type
str(df2$housing_payment_pesos)
#INSERT CODE TO CONVERT "housing_payment_pesos" to USD
# 1 Mexican Peso = 0.050 USD
# 1 USD = 19.88 Mexican Peso
df2$housing_payment_pesos <- df2$housing_payment_pesos * 0.05
#INSERT CODE TO RENAME "housing_payment_pesos" to "housing_payment_usd"
# colnames(df2)[which(names(df2) == "housing_payment_pesos")] <- "housing_payment_usd"
# INSERT CODE TO MAKE SURE ALL "US" TAGS equal "usa" and all "MEX" tags equal "mex"
df2$country_of_origin[df2$country_of_origin == "US"] <- "usa"
df2$country_of_origin[df2$country_of_origin == "USA"] <- "usa"
df2$country_of_origin[df2$country_of_origin == "MEX"] <- "mex"
df1
df2
